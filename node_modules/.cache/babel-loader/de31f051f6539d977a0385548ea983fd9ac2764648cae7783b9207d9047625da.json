{"ast":null,"code":"var _jsxFileName = \"/Users/raymaestas/flatiron/phase2-project/client/src/components/Page.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Search from \"./Search\";\nimport NewSongForm from \"./NewSongForm\";\nimport SongList from \"./SongList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Page() {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [filterText, setFilterText] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://localhost:3000/albums\").then(response => response.json()).then(songJson => {\n      setSong(songJson);\n    });\n  }, []);\n  function addNewSong(Song) {\n    fetch(\"http://localhost:3000/albums\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(song)\n    });\n    setSongs([...songs, song]);\n  }\n  function onFilterText(text) {\n    setFilterText(text);\n  }\n  const displaySongs = planets.filter(song => {\n    const searchLowerCase = filterText.toLowerCase();\n    return song.song.toLowerCase().includes(searchLowerCase) || song.released.toLowerCase().includes(searchLowerCase) || song.Length.toLowerCase().includes(searchLowerCase);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      filterText: onFilterText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(SongList, {\n        songs: displaySongs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NewSongForm, {\n        addNewSong: addNewSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(Page, \"TRCUeToytFPuR5NDiOxItSDRflE=\");\n_c = Page;\nexport default Page;\nvar _c;\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"names":["React","useEffect","useState","Search","NewSongForm","SongList","Page","songs","setSongs","filterText","setFilterText","fetch","then","response","json","songJson","setSong","addNewSong","Song","method","headers","body","JSON","stringify","song","onFilterText","text","displaySongs","planets","filter","searchLowerCase","toLowerCase","includes","released","Length"],"sources":["/Users/raymaestas/flatiron/phase2-project/client/src/components/Page.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport Search from \"./Search\"\nimport NewSongForm from \"./NewSongForm\"\nimport SongList from \"./SongList\"\n\n\nfunction Page() {\n\n    const [songs, setSongs] = useState([]);\n    const [filterText, setFilterText] = useState(\"\");\n\n    useEffect(() => {\n        fetch(\"http://localhost:3000/albums\")\n            .then(response => response.json())\n            .then(songJson => {\n                setSong(songJson);\n            })\n    }, []);\n\n    function addNewSong(Song) {\n        fetch(\"http://localhost:3000/albums\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(song)\n        });\n\n        setSongs([...songs, song])\n    }\n\n    function onFilterText(text) {\n        setFilterText(text);\n    }\n\n    const displaySongs = planets.filter(song => {\n        const searchLowerCase = filterText.toLowerCase();\n\n        return (\n               song.song.toLowerCase().includes(searchLowerCase)\n            || song.released.toLowerCase().includes(searchLowerCase)\n            || song.Length.toLowerCase().includes(searchLowerCase)\n\n        );\n    });\n\n    return (\n        <div className=\"page\">\n            <Search filterText={onFilterText} />\n            <div className=\"content\">\n                <SongList songs={displaySongs} />\n                <NewSongForm addNewSong={addNewSong} />\n            </div>\n        </div>\n    )\n}\n\nexport default Page;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,QAAQ,MAAM,YAAY;AAAA;AAGjC,SAASC,IAAI,GAAG;EAAA;EAEZ,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACZU,KAAK,CAAC,8BAA8B,CAAC,CAChCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,QAAQ,IAAI;MACdC,OAAO,CAACD,QAAQ,CAAC;IACrB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,SAASE,UAAU,CAACC,IAAI,EAAE;IACtBP,KAAK,CAAC,8BAA8B,EAAE;MAClCQ,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACC,IAAI;IAC7B,CAAC,CAAC;IAEFhB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEiB,IAAI,CAAC,CAAC;EAC9B;EAEA,SAASC,YAAY,CAACC,IAAI,EAAE;IACxBhB,aAAa,CAACgB,IAAI,CAAC;EACvB;EAEA,MAAMC,YAAY,GAAGC,OAAO,CAACC,MAAM,CAACL,IAAI,IAAI;IACxC,MAAMM,eAAe,GAAGrB,UAAU,CAACsB,WAAW,EAAE;IAEhD,OACOP,IAAI,CAACA,IAAI,CAACO,WAAW,EAAE,CAACC,QAAQ,CAACF,eAAe,CAAC,IACjDN,IAAI,CAACS,QAAQ,CAACF,WAAW,EAAE,CAACC,QAAQ,CAACF,eAAe,CAAC,IACrDN,IAAI,CAACU,MAAM,CAACH,WAAW,EAAE,CAACC,QAAQ,CAACF,eAAe,CAAC;EAG9D,CAAC,CAAC;EAEF,oBACI;IAAK,SAAS,EAAC,MAAM;IAAA,wBACjB,QAAC,MAAM;MAAC,UAAU,EAAEL;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG,eACpC;MAAK,SAAS,EAAC,SAAS;MAAA,wBACpB,QAAC,QAAQ;QAAC,KAAK,EAAEE;MAAa;QAAA;QAAA;QAAA;MAAA,QAAG,eACjC,QAAC,WAAW;QAAC,UAAU,EAAEV;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACrC;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GAjDQX,IAAI;AAAA,KAAJA,IAAI;AAmDb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}