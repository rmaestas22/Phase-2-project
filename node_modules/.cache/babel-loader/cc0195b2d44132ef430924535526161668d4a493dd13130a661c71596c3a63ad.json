{"ast":null,"code":"var _jsxFileName = \"/Users/raymaestas/flatiron/phase2-project/client/src/components/Page.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Search from \"./Search\";\nimport NewSongForm from \"./NewSongForm\";\nimport SongList from \"./SongList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Registry() {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [filterText, setFilterText] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://localhost:3000/albums\").then(response => response.json()).then(songJson => {\n      setSong(songJson);\n    });\n  }, []);\n  function addNewPlanet(planet) {\n    fetch(\"http://localhost:3000/albums\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(planet)\n    });\n    setPlanets([...planets, planet]);\n  }\n  function onFilterText(text) {\n    setFilterText(text);\n  }\n  const displayPlanets = planets.filter(planet => {\n    const searchLowerCase = filterText.toLowerCase();\n    return planet.song.toLowerCase().includes(searchLowerCase) || planet.released.toLowerCase().includes(searchLowerCase) || planet.Length.toLowerCase().includes(searchLowerCase);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registry\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      filterText: onFilterText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(SongList, {\n        planets: displayPlanets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NewSongForm, {\n        addNewPlanet: addNewPlanet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(Registry, \"TRCUeToytFPuR5NDiOxItSDRflE=\");\n_c = Registry;\nexport default Registry;\nvar _c;\n$RefreshReg$(_c, \"Registry\");","map":{"version":3,"names":["React","useEffect","useState","Search","NewSongForm","SongList","Registry","songs","setSongs","filterText","setFilterText","fetch","then","response","json","songJson","setSong","addNewPlanet","planet","method","headers","body","JSON","stringify","setPlanets","planets","onFilterText","text","displayPlanets","filter","searchLowerCase","toLowerCase","song","includes","released","Length"],"sources":["/Users/raymaestas/flatiron/phase2-project/client/src/components/Page.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport Search from \"./Search\"\nimport NewSongForm from \"./NewSongForm\"\nimport SongList from \"./SongList\"\n\n\nfunction Registry() {\n\n    const [songs, setSongs] = useState([]);\n    const [filterText, setFilterText] = useState(\"\");\n\n    useEffect(() => {\n        fetch(\"http://localhost:3000/albums\")\n            .then(response => response.json())\n            .then(songJson => {\n                setSong(songJson);\n            })\n    }, []);\n\n    function addNewPlanet(planet) {\n        fetch(\"http://localhost:3000/albums\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(planet)\n        });\n\n        setPlanets([...planets, planet])\n    }\n\n    function onFilterText(text) {\n        setFilterText(text);\n    }\n\n    const displayPlanets = planets.filter(planet => {\n        const searchLowerCase = filterText.toLowerCase();\n\n        return (\n               planet.song.toLowerCase().includes(searchLowerCase)\n            || planet.released.toLowerCase().includes(searchLowerCase)\n            || planet.Length.toLowerCase().includes(searchLowerCase)\n\n        );\n    });\n\n    return (\n        <div className=\"registry\">\n            <Search filterText={onFilterText} />\n            <div className=\"content\">\n                <SongList planets={displayPlanets} />\n                <NewSongForm addNewPlanet={addNewPlanet} />\n            </div>\n        </div>\n    )\n}\n\nexport default Registry;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,QAAQ,MAAM,YAAY;AAAA;AAGjC,SAASC,QAAQ,GAAG;EAAA;EAEhB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACZU,KAAK,CAAC,8BAA8B,CAAC,CAChCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,QAAQ,IAAI;MACdC,OAAO,CAACD,QAAQ,CAAC;IACrB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,SAASE,YAAY,CAACC,MAAM,EAAE;IAC1BP,KAAK,CAAC,8BAA8B,EAAE;MAClCQ,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,MAAM;IAC/B,CAAC,CAAC;IAEFM,UAAU,CAAC,CAAC,GAAGC,OAAO,EAAEP,MAAM,CAAC,CAAC;EACpC;EAEA,SAASQ,YAAY,CAACC,IAAI,EAAE;IACxBjB,aAAa,CAACiB,IAAI,CAAC;EACvB;EAEA,MAAMC,cAAc,GAAGH,OAAO,CAACI,MAAM,CAACX,MAAM,IAAI;IAC5C,MAAMY,eAAe,GAAGrB,UAAU,CAACsB,WAAW,EAAE;IAEhD,OACOb,MAAM,CAACc,IAAI,CAACD,WAAW,EAAE,CAACE,QAAQ,CAACH,eAAe,CAAC,IACnDZ,MAAM,CAACgB,QAAQ,CAACH,WAAW,EAAE,CAACE,QAAQ,CAACH,eAAe,CAAC,IACvDZ,MAAM,CAACiB,MAAM,CAACJ,WAAW,EAAE,CAACE,QAAQ,CAACH,eAAe,CAAC;EAGhE,CAAC,CAAC;EAEF,oBACI;IAAK,SAAS,EAAC,UAAU;IAAA,wBACrB,QAAC,MAAM;MAAC,UAAU,EAAEJ;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG,eACpC;MAAK,SAAS,EAAC,SAAS;MAAA,wBACpB,QAAC,QAAQ;QAAC,OAAO,EAAEE;MAAe;QAAA;QAAA;QAAA;MAAA,QAAG,eACrC,QAAC,WAAW;QAAC,YAAY,EAAEX;MAAa;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACzC;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GAjDQX,QAAQ;AAAA,KAARA,QAAQ;AAmDjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}