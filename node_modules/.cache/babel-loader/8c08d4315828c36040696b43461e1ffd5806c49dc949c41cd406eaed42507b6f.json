{"ast":null,"code":"var _jsxFileName = \"/Users/raymaestas/flatiron/Phase-2-project/src/components/NewSongForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewSongForm(_ref) {\n  _s();\n  let {\n    addNewSong,\n    onSubmit\n  } = _ref;\n  const [formData, setFormData] = useState({\n    song_name: \"\",\n    released: \"\",\n    length: \"\",\n    album: \"\"\n  });\n  const [formValues, setFormValues] = useState({});\n  const handleFormValues = e => {\n    setFormValues({\n      ...formValues,\n      [e.target.name]: e.target.value,\n      id: uuidv4()\n    });\n  };\n  function handleFormSubmit(e) {\n    e.preventDefault();\n    const newSong = {\n      song_name: formValues.song_name,\n      released: formValues.released,\n      length: formValues.length,\n      album: formValues.album\n    };\n    fetch(\"http://localhost:4000/songs\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newSong)\n    }).then(r => r.json()).then(newSongFromServer => {\n      onSubmit(newSongFromServer);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-song-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"New song\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"song_name\",\n        placeholder: \"Song Name\",\n        value: formValues.song_name,\n        onChange: handleFormValues\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"released\",\n        placeholder: \"Year Released\",\n        value: formValues.released,\n        onChange: handleFormValues\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"length\",\n        step: \"Length\",\n        placeholder: \"Length\",\n        value: formValues.length,\n        onChange: handleFormValues\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"length\",\n        step: \"Length\",\n        placeholder: \"Length\",\n        value: formValues.length,\n        onChange: handleFormValues\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), \" />\", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add song\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(NewSongForm, \"VVJ5aQnmUkEv1msKyu8XKeaSQ3Q=\");\n_c = NewSongForm;\nexport default NewSongForm;\nvar _c;\n$RefreshReg$(_c, \"NewSongForm\");","map":{"version":3,"names":["React","useState","v4","uuidv4","NewSongForm","addNewSong","onSubmit","formData","setFormData","song_name","released","length","album","formValues","setFormValues","handleFormValues","e","target","name","value","id","handleFormSubmit","preventDefault","newSong","fetch","method","headers","body","JSON","stringify","then","r","json","newSongFromServer"],"sources":["/Users/raymaestas/flatiron/Phase-2-project/src/components/NewSongForm.js"],"sourcesContent":["import React,{useState} from \"react\"\nimport { v4 as uuidv4 } from \"uuid\"\n\n\n\nfunction NewSongForm({ addNewSong, onSubmit }) {\n const [formData,setFormData]=useState({\n    song_name: \"\",\n    released: \"\",\n    length: \"\",\n    album: \"\"\n })\n\n    const [formValues, setFormValues] = useState({})\n\n    const handleFormValues = (e) => {\n        setFormValues({ ...formValues, [e.target.name]: e.target.value, id: uuidv4() });\n\n    }\n\n    function handleFormSubmit(e) {\n        e.preventDefault();\n        const newSong = {\n            song_name: formValues.song_name,\n            released: formValues.released,\n            length: formValues.length,\n            album: formValues.album,\n        }\n        fetch(\"http://localhost:4000/songs\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newSong)\n\n        })\n            .then(r => r.json())\n            .then(newSongFromServer => {\n                onSubmit(newSongFromServer)\n            })\n    }\n\n\n        return (\n        <div className=\"new-song-form\">\n            <h2>New song</h2>\n            <form onSubmit={handleFormSubmit}>\n                <input type=\"text\" name=\"song_name\" placeholder=\"Song Name\" value={formValues.song_name} onChange={handleFormValues} />\n                <input type=\"text\" name=\"released\" placeholder=\"Year Released\" value={formValues.released} onChange={handleFormValues} />\n                <input type=\"text\" name=\"length\" step=\"Length\" placeholder=\"Length\" value={formValues.length} onChange={handleFormValues} />\n                    <input type=\"text\" name=\"length\" step=\"Length\" placeholder=\"Length\" value={formValues.length} onChange={handleFormValues} /> />\n                <button type=\"submit\" >Add song</button>\n            </form>\n        </div>\n    );\n\n\n}\n\n\n\nexport default NewSongForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAAA;AAInC,SAASC,WAAW,OAA2B;EAAA;EAAA,IAA1B;IAAEC,UAAU;IAAEC;EAAS,CAAC;EAC5C,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAACP,QAAQ,CAAC;IACnCQ,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE;EACV,CAAC,CAAC;EAEC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEhD,MAAMc,gBAAgB,GAAIC,CAAC,IAAK;IAC5BF,aAAa,CAAC;MAAE,GAAGD,UAAU;MAAE,CAACG,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE,KAAK;MAAEC,EAAE,EAAEjB,MAAM;IAAG,CAAC,CAAC;EAEnF,CAAC;EAED,SAASkB,gBAAgB,CAACL,CAAC,EAAE;IACzBA,CAAC,CAACM,cAAc,EAAE;IAClB,MAAMC,OAAO,GAAG;MACZd,SAAS,EAAEI,UAAU,CAACJ,SAAS;MAC/BC,QAAQ,EAAEG,UAAU,CAACH,QAAQ;MAC7BC,MAAM,EAAEE,UAAU,CAACF,MAAM;MACzBC,KAAK,EAAEC,UAAU,CAACD;IACtB,CAAC;IACDY,KAAK,CAAC,6BAA6B,EAAE;MACjCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,OAAO;IAEhC,CAAC,CAAC,CACGO,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,EAAE,CAAC,CACnBF,IAAI,CAACG,iBAAiB,IAAI;MACvB3B,QAAQ,CAAC2B,iBAAiB,CAAC;IAC/B,CAAC,CAAC;EACV;EAGI,oBACA;IAAK,SAAS,EAAC,eAAe;IAAA,wBAC1B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiB,eACjB;MAAM,QAAQ,EAAEZ,gBAAiB;MAAA,wBAC7B;QAAO,IAAI,EAAC,MAAM;QAAC,IAAI,EAAC,WAAW;QAAC,WAAW,EAAC,WAAW;QAAC,KAAK,EAAER,UAAU,CAACJ,SAAU;QAAC,QAAQ,EAAEM;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAG,eACvH;QAAO,IAAI,EAAC,MAAM;QAAC,IAAI,EAAC,UAAU;QAAC,WAAW,EAAC,eAAe;QAAC,KAAK,EAAEF,UAAU,CAACH,QAAS;QAAC,QAAQ,EAAEK;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAG,eACzH;QAAO,IAAI,EAAC,MAAM;QAAC,IAAI,EAAC,QAAQ;QAAC,IAAI,EAAC,QAAQ;QAAC,WAAW,EAAC,QAAQ;QAAC,KAAK,EAAEF,UAAU,CAACF,MAAO;QAAC,QAAQ,EAAEI;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAG,eACxH;QAAO,IAAI,EAAC,MAAM;QAAC,IAAI,EAAC,QAAQ;QAAC,IAAI,EAAC,QAAQ;QAAC,WAAW,EAAC,QAAQ;QAAC,KAAK,EAAEF,UAAU,CAACF,MAAO;QAAC,QAAQ,EAAEI;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAG,sBAChI;QAAQ,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmB;IAAA;MAAA;MAAA;MAAA;IAAA,QACrC;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAId;AAAC,GApDQX,WAAW;AAAA,KAAXA,WAAW;AAwDpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}